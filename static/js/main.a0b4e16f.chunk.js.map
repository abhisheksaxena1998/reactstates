{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","components/counter.jsx","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Counter","state","count","styles","fontSize","fontWeight","handleIncrement","setState","console","log","Fragment","style","this","className","formatCount","onClick","getBadgeClasses","classes","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAAe,I,MCwBAA,ICZAC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,2CC4CCQ,E,4MAhDbC,MAAQ,CACNC,MAAO,G,EAQTC,OAAS,CACPC,SAAU,GACVC,WAAY,Q,EAGdC,gBAAkB,WAEhB,EAAKC,SAAS,CAAEL,MAAO,EAAKD,MAAMC,MAAQ,IAC1CM,QAAQC,IAAI,oBAAZ,iB,uDAKA,OACE,eAAC,IAAMC,SAAP,WACE,sBAAMC,MAAOC,KAAKT,OAAQU,UAAU,0BAApC,SACGD,KAAKE,gBAER,wBACEC,QAASH,KAAKN,gBACdO,UAAWD,KAAKI,kBAFlB,4B,wCAUJ,IAAIC,EAAU,mBAEd,OADAA,GAAgC,IAArBL,KAAKX,MAAMC,MAAc,UAAY,S,oCAInC,IACLA,EAAUU,KAAKX,MAAfC,MACR,OAAiB,IAAVA,EAAc,OAASA,M,GA7CZgB,aCMtBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BhC,M","file":"static/js/main.a0b4e16f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Component } from \"react\";\r\n\r\nclass Counter extends Component {\r\n  state = {\r\n    count: 0,\r\n  };\r\n\r\n  /* constructor(){\r\n        super();\r\n        this.handleIncrement=this.handleIncrement.bind(this)\r\n    } */\r\n\r\n  styles = {\r\n    fontSize: 14,\r\n    fontWeight: \"bold\",\r\n  };\r\n\r\n  handleIncrement = () => {\r\n    /* this.state.count++; */\r\n    this.setState({ count: this.state.count + 1 });\r\n    console.log(\"Increment clicked\", this);\r\n  };\r\n\r\n  render() {\r\n    //let classes = this.getBadgeClasses();\r\n    return (\r\n      <React.Fragment>\r\n        <span style={this.styles} className=\"badge badge-primary m-4\">\r\n          {this.formatCount()}\r\n        </span>\r\n        <button\r\n          onClick={this.handleIncrement}\r\n          className={this.getBadgeClasses()}\r\n        >\r\n          Increment\r\n        </button>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  getBadgeClasses() {\r\n    let classes = \"badge m-2 badge-\";\r\n    classes += this.state.count === 0 ? \"warning\" : \"info\";\r\n    return classes;\r\n  }\r\n\r\n  formatCount() {\r\n    const { count } = this.state;\r\n    return count === 0 ? \"Zero\" : count;\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Counter from './components/counter'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Counter />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}