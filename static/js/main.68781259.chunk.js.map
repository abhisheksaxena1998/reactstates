{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","components/counter.jsx","components/counters.jsx","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Counter","state","value","props","counter","styles","fontSize","fontWeight","buttonStyle","height","handleIncrement","console","log","setState","this","Fragment","children","style","className","formatCount","onClick","getBadgeClasses","onDelete","id","classes","count","Component","Counters","counters","handleDelete","counterId","filter","c","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAAe,I,MCwBAA,ICZAC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,oCC6DCQ,E,4MAjEbC,MAAQ,CACNC,MAAO,EAAKC,MAAMC,QAAQF,O,EAQ5BG,OAAS,CACPC,SAAU,GACVC,WAAY,Q,EAGdC,YAAc,CACZC,OAAQ,I,EAGVC,gBAAkB,WAChBC,QAAQC,MAER,EAAKC,SAAS,CAAEX,MAAO,EAAKD,MAAMC,MAAQ,K,uDAOlC,IAAD,OAGP,OAFAS,QAAQC,IAAI,QAASE,KAAKX,OAGxB,eAAC,IAAMY,SAAP,WACGD,KAAKX,MAAMa,SACZ,sBAAMC,MAAOH,KAAKT,OAAQa,UAAU,0BAApC,SACGJ,KAAKK,gBAER,wBACEF,MAAOH,KAAKN,YACZY,QAAS,kBAAM,EAAKV,mBACpBQ,UAAWJ,KAAKO,kBAHlB,uBAOA,wBACED,QAAS,kBAAM,EAAKjB,MAAMmB,SAAS,EAAKnB,MAAMC,QAAQmB,KACtDL,UAAU,4BAFZ,yB,wCAUJ,IAAIM,EAAU,mBAEd,OADAA,GAAgC,IAArBV,KAAKb,MAAMC,MAAc,UAAY,c,oCAInC,IACEuB,EAAUX,KAAKb,MAAtBC,MACR,OAAiB,IAAVuB,EAAc,OAASA,M,GA9DZC,aCiCPC,E,4MA/Bb1B,MAAQ,CACN2B,SAAU,CACR,CAAEL,GAAI,EAAGrB,MAAO,GAChB,CAAEqB,GAAI,EAAGrB,MAAO,GAChB,CAAEqB,GAAI,EAAGrB,MAAO,GAChB,CAAEqB,GAAI,EAAGrB,MAAO,K,EAIpB2B,aAAe,SAACC,GACdnB,QAAQC,IAAI,uBAAwBkB,GACpC,IAAMF,EAAW,EAAK3B,MAAM2B,SAASG,QAAO,SAACC,GAAD,OAAOA,EAAET,KAAOO,KAC5D,EAAKjB,SAAS,CAAEe,c,uDAER,IAAD,OACP,OACE,8BACGd,KAAKb,MAAM2B,SAASK,KAAI,SAAC7B,GAAD,OACvB,cAAC,EAAD,CAEEkB,SAAU,EAAKO,aACfzB,QAASA,EAHX,SAKE,2CAAcA,EAAQmB,OAJjBnB,EAAQmB,a,GApBFG,aCKvBQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1B/C,M","file":"static/js/main.68781259.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Component } from \"react\";\r\n\r\nclass Counter extends Component {\r\n  state = {\r\n    value: this.props.counter.value,\r\n  };\r\n\r\n  /* constructor(){\r\n        super();\r\n        this.handleIncrement=this.handleIncrement.bind(this)\r\n    } */\r\n\r\n  styles = {\r\n    fontSize: 14,\r\n    fontWeight: \"bold\",\r\n  };\r\n\r\n  buttonStyle = {\r\n    height: 25,\r\n  };\r\n\r\n  handleIncrement = () => {\r\n    console.log();\r\n    /* this.state.count++; */\r\n    this.setState({ value: this.state.value + 1 });\r\n  };\r\n\r\n  /*  doHandleIncrement = () => {\r\n    this.handleIncrement({ id: 1 });\r\n  }; */\r\n\r\n  render() {\r\n    console.log(\"props\", this.props);\r\n    //let classes = this.getBadgeClasses();\r\n    return (\r\n      <React.Fragment>\r\n        {this.props.children}\r\n        <span style={this.styles} className=\"badge badge-primary m-4\">\r\n          {this.formatCount()}\r\n        </span>\r\n        <button\r\n          style={this.buttonStyle}\r\n          onClick={() => this.handleIncrement()}\r\n          className={this.getBadgeClasses()}\r\n        >\r\n          Increment\r\n        </button>\r\n        <button\r\n          onClick={() => this.props.onDelete(this.props.counter.id)}\r\n          className=\"btn btn-danger btn-sm m-2\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  getBadgeClasses() {\r\n    let classes = \"badge m-2 badge-\";\r\n    classes += this.state.value === 0 ? \"warning\" : \"secondary\";\r\n    return classes;\r\n  }\r\n\r\n  formatCount() {\r\n    const { value: count } = this.state;\r\n    return count === 0 ? \"Zero\" : count;\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n","import React, { Component } from \"react\";\r\nimport Counter from \"./counter\";\r\n\r\nclass Counters extends Component {\r\n  state = {\r\n    counters: [\r\n      { id: 1, value: 4 },\r\n      { id: 2, value: 0 },\r\n      { id: 3, value: 0 },\r\n      { id: 4, value: 0 },\r\n    ],\r\n  };\r\n\r\n  handleDelete = (counterId) => {\r\n    console.log(\"Event handler called\", counterId);\r\n    const counters = this.state.counters.filter((c) => c.id !== counterId);\r\n    this.setState({ counters });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.counters.map((counter) => (\r\n          <Counter\r\n            key={counter.id}\r\n            onDelete={this.handleDelete}\r\n            counter={counter}\r\n          >\r\n            <h4>Counter #{counter.id}</h4>\r\n          </Counter>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Counters;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Counters from './components/counters'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Counters />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}