[{"D:\\React projects\\reactstates\\src\\index.js":"1","D:\\React projects\\reactstates\\src\\App.js":"2","D:\\React projects\\reactstates\\src\\reportWebVitals.js":"3","D:\\React projects\\reactstates\\src\\components\\counter.jsx":"4","D:\\React projects\\reactstates\\src\\components\\counters.jsx":"5","D:\\React projects\\reactstates\\src\\components\\navbar.jsx":"6"},{"size":588,"mtime":1609588922947,"results":"7","hashOfConfig":"8"},{"size":1341,"mtime":1609592149042,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":1615,"mtime":1609594570500,"results":"11","hashOfConfig":"8"},{"size":694,"mtime":1609594450597,"results":"12","hashOfConfig":"8"},{"size":711,"mtime":1609594013811,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"11kbq4r",{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"17"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"17"},"D:\\React projects\\reactstates\\src\\index.js",["30"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Counters from './components/counters'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["31","32"],"D:\\React projects\\reactstates\\src\\App.js",["33"],"import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport NavBar from './components/navbar';\nimport Counters from \"./components/counters\"\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    counters: [\n      { id: 1, value: 0 },\n      { id: 2, value: 0 },\n      { id: 3, value: 0 },\n      { id: 4, value: 0 },\n    ],\n  };\n\n  handleIncrement = (counter) => {\n    const counters = [...this.state.counters];\n    const index = counters.indexOf(counter);\n    counters[index] = { ...counter };\n    counters[index].value++;\n    this.setState({ counters });\n  };\n\n  handleReset = () => {\n    const counters = this.state.counters.map((c) => {\n      c.value = 0;\n      return c;\n    });\n    this.setState({ counters });\n  };\n\n  handleDelete = (counterId) => {\n    console.log(\"Event handler called\", counterId);\n    const counters = this.state.counters.filter((c) => c.id !== counterId);\n    this.setState({ counters });\n  };\n  render() { \n    return ( <React.Fragment>\n      <NavBar totalCounters={this.state.counters.filter(c=>c.value>0).length}/>\n      <main className=\"container\">\n        <Counters \n        counters={this.state.counters}\n        onReset={this.handleReset} onIncrement={this.handleIncrement} onDelete={this.handleDelete}/>\n        </main>\n      </React.Fragment> );\n  }\n}\n \nexport default App;","D:\\React projects\\reactstates\\src\\reportWebVitals.js",[],"D:\\React projects\\reactstates\\src\\components\\counter.jsx",[],"D:\\React projects\\reactstates\\src\\components\\counters.jsx",[],"D:\\React projects\\reactstates\\src\\components\\navbar.jsx",["34","35"],"import React, { Component } from \"react\";\r\n\r\nconst NavBar = (props) => {\r\n  return (\r\n    <nav class=\"navbar navbar-light bg-light\">\r\n      <div class=\"container-fluid\">\r\n        <a class=\"navbar-brand\" href=\"#\">\r\n          <img\r\n            src=\"https://assets1.risnews.com/styles/content_sm/s3/2018-04/shopping-cart.png?itok=LUk_XbaE\"\r\n            height=\"30\"\r\n            alt=\"\"\r\n            loading=\"lazy\"\r\n          />\r\n          <strong>\r\n            {\"  \"}\r\n            Shopping Cart{\" \"}\r\n          </strong>\r\n          <span className=\"badge badge-pill badge-secondary\">\r\n            {props.totalCounters}\r\n          </span>\r\n        </a>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n",{"ruleId":"36","severity":1,"message":"37","line":7,"column":8,"nodeType":"38","messageId":"39","endLine":7,"endColumn":16},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"36","severity":1,"message":"44","line":2,"column":8,"nodeType":"38","messageId":"39","endLine":2,"endColumn":12},{"ruleId":"36","severity":1,"message":"45","line":1,"column":17,"nodeType":"38","messageId":"39","endLine":1,"endColumn":26},{"ruleId":"46","severity":1,"message":"47","line":7,"column":9,"nodeType":"48","endLine":7,"endColumn":42},"no-unused-vars","'Counters' is defined but never used.","Identifier","unusedVar","no-native-reassign",["49"],"no-negated-in-lhs",["50"],"'logo' is defined but never used.","'Component' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]